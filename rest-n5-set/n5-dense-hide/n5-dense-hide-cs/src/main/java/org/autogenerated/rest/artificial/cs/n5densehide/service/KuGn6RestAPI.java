package org.autogenerated.rest.artificial.cs.n5densehide.service;

import org.autogenerated.rest.artificial.cs.n5densehide.entity.*;
import org.autogenerated.rest.artificial.cs.n5densehide.dto.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import javax.ws.rs.core.MediaType;
import java.util.*;
/** automatically created on 2020-01-14 */
@RestController
@RequestMapping(path = "/api")
public class KuGn6RestAPI {
  @Autowired private KuGn6Repository kuGn6Repository;

  @RequestMapping(
      value = "/kuGn6s",
      method = RequestMethod.POST,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createKuGn6(@RequestBody KuGn6 kuGn6) {
    // an entity with id kuGn6.id should not exist
    if (kuGn6Repository.findById(kuGn6.id).isPresent()) return ResponseEntity.status(400).build();
    KuGn6Entity node = new KuGn6Entity();
    node.setId(kuGn6.id);
    node.setName(kuGn6.name);
    node.setValue(kuGn6.value);
    // save the entity
    kuGn6Repository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/kuGn6s/{kuGn6sId}",
      method = RequestMethod.PUT,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createOrUpdateKuGn6(
      @PathVariable(name = "kuGn6sId") Integer kuGn6sId, @RequestBody KuGn6 kuGn6) {
    kuGn6.id = kuGn6sId;
    KuGn6Entity node = null;
    if (kuGn6Repository.findById(kuGn6.id).isPresent())
      node = kuGn6Repository.findById(kuGn6.id).get();
    else {
      node = new KuGn6Entity();
      node.setId(kuGn6.id);
    }
    node.setName(kuGn6.name);
    node.setValue(kuGn6.value);
    // save the entity
    kuGn6Repository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/kuGn6s/{kuGn6sId}",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<KuGn6> getKuGn6ById(@PathVariable(name = "kuGn6sId") Integer kuGn6sId) {
    if (!kuGn6Repository.findById(kuGn6sId).isPresent()) return ResponseEntity.status(404).build();
    KuGn6 dto = kuGn6Repository.findById(kuGn6sId).get().getDto();
    return ResponseEntity.ok(dto);
  }

  @RequestMapping(
      value = "/kuGn6s",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<List<KuGn6>> getAllKuGn6() {
    List<KuGn6> allDtos = new ArrayList<>();
    for (KuGn6Entity e : kuGn6Repository.findAll()) {
      allDtos.add(e.getDto());
    }
    return ResponseEntity.ok(allDtos);
  }

  @RequestMapping(
      value = "/kuGn6s/{kuGn6sId}",
      method = RequestMethod.PATCH,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity updateKuGn6ByValues(
      @PathVariable(name = "kuGn6sId") Integer kuGn6sId,
      @RequestParam(name = "kuGn6sname", required = false) String kuGn6sname,
      @RequestParam(name = "kuGn6svalue", required = false) Integer kuGn6svalue) {
    if (!kuGn6Repository.findById(kuGn6sId).isPresent()) return ResponseEntity.status(404).build();
    KuGn6Entity node = kuGn6Repository.findById(kuGn6sId).get();
    if (kuGn6sname != null) {
      node.setName(kuGn6sname);
    }
    if (kuGn6svalue != null) {
      node.setValue(kuGn6svalue);
    }
    // save the entity
    kuGn6Repository.save(node);
    return ResponseEntity.status(200).build();
  }

  @RequestMapping(
      value = "/kuGn6s/{kuGn6sId}",
      method = RequestMethod.DELETE,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity deleteKuGn6(@PathVariable(name = "kuGn6sId") Integer kuGn6sId) {
    // an entity with id kuGn6sId should exist
    if (!kuGn6Repository.findById(kuGn6sId).isPresent()) return ResponseEntity.status(404).build();
    kuGn6Repository.deleteById(kuGn6sId);
    return ResponseEntity.status(200).build();
  }
}
