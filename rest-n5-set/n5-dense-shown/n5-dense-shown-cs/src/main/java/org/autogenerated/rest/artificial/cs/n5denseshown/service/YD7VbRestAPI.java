package org.autogenerated.rest.artificial.cs.n5denseshown.service;

import org.autogenerated.rest.artificial.cs.n5denseshown.entity.*;
import org.autogenerated.rest.artificial.cs.n5denseshown.dto.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import javax.ws.rs.core.MediaType;
import java.util.*;
/** automatically created on 2020-01-14 */
@RestController
@RequestMapping(path = "/api")
public class YD7VbRestAPI {
  @Autowired private YD7VbRepository yD7VbRepository;
  @Autowired private AS7ExRepository aS7ExRepository;
  @Autowired private SIth8Repository sIth8Repository;
  @Autowired private RiT1iRepository riT1iRepository;
  @Autowired private IqYSoRepository iqYSoRepository;
  @Autowired private RiT1iRestAPI riT1iRestAPI;
  @Autowired private IqYSoRestAPI iqYSoRestAPI;

  @RequestMapping(
      value = "/sIth8s/{sIth8Id}/aS7Exs/{aS7ExId}/yD7Vbs",
      method = RequestMethod.POST,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createYD7Vb(
      @RequestBody YD7Vb yD7Vb,
      @PathVariable(name = "aS7ExId") Integer aS7ExId,
      @PathVariable(name = "sIth8Id") Integer sIth8Id) {
    // an entity with id yD7Vb.id should not exist
    if (yD7VbRepository.findById(yD7Vb.id).isPresent()) return ResponseEntity.status(400).build();
    YD7VbEntity node = new YD7VbEntity();
    node.setId(yD7Vb.id);
    // create owned entity
    RiT1i ownedDto0 = new RiT1i();
    ownedDto0.name = yD7Vb.riT1iName;
    ownedDto0.value = yD7Vb.riT1iValue;
    ownedDto0.id = yD7Vb.riT1iId;
    int ownedDto0Code = riT1iRestAPI.createRiT1i(ownedDto0).getStatusCode().value();
    if (!riT1iRepository.findById(yD7Vb.riT1iId).isPresent())
      return ResponseEntity.status(ownedDto0Code).build();
    RiT1iEntity ownedEntityRiT1iEntity = riT1iRepository.findById(yD7Vb.riT1iId).get();
    node.setOwnedRiT1i(ownedEntityRiT1iEntity);
    IqYSo ownedDto1 = new IqYSo();
    ownedDto1.name = yD7Vb.iqYSoName;
    ownedDto1.value = yD7Vb.iqYSoValue;
    ownedDto1.id = yD7Vb.iqYSoId;
    int ownedDto1Code = iqYSoRestAPI.createIqYSo(ownedDto1).getStatusCode().value();
    if (!iqYSoRepository.findById(yD7Vb.iqYSoId).isPresent())
      return ResponseEntity.status(ownedDto1Code).build();
    IqYSoEntity ownedEntityIqYSoEntity = iqYSoRepository.findById(yD7Vb.iqYSoId).get();
    node.setOwnedIqYSo(ownedEntityIqYSoEntity);
    // refer to related entity
    if (!aS7ExRepository.findById(yD7Vb.aS7ExId).isPresent())
      return ResponseEntity.status(404).build();
    AS7ExEntity referVarToAS7ExEntity = aS7ExRepository.findById(yD7Vb.aS7ExId).get();
    node.setAS7Ex(referVarToAS7ExEntity);
    if (!sIth8Repository.findById(yD7Vb.sIth8Id).isPresent())
      return ResponseEntity.status(404).build();
    SIth8Entity referVarToSIth8Entity = sIth8Repository.findById(yD7Vb.sIth8Id).get();
    node.setSIth8(referVarToSIth8Entity);
    node.setName(yD7Vb.name);
    node.setValue(yD7Vb.value);
    // save the entity
    yD7VbRepository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/sIth8s/{sIth8Id}/aS7Exs/{aS7ExId}/yD7Vbs/{yD7VbsId}",
      method = RequestMethod.PUT,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createOrUpdateYD7Vb(
      @PathVariable(name = "yD7VbsId") Integer yD7VbsId,
      @RequestBody YD7Vb yD7Vb,
      @PathVariable(name = "aS7ExId") Integer aS7ExId,
      @PathVariable(name = "sIth8Id") Integer sIth8Id) {
    yD7Vb.id = yD7VbsId;
    YD7VbEntity node = null;
    if (yD7VbRepository.findById(yD7Vb.id).isPresent())
      node = yD7VbRepository.findById(yD7Vb.id).get();
    else {
      node = new YD7VbEntity();
      node.setId(yD7Vb.id);
    }
    // create owned entity
    RiT1i ownedDto0 = new RiT1i();
    ownedDto0.name = yD7Vb.riT1iName;
    ownedDto0.value = yD7Vb.riT1iValue;
    ownedDto0.id = yD7Vb.riT1iId;
    int ownedDto0Code = riT1iRestAPI.createRiT1i(ownedDto0).getStatusCode().value();
    if (!riT1iRepository.findById(yD7Vb.riT1iId).isPresent())
      return ResponseEntity.status(ownedDto0Code).build();
    RiT1iEntity ownedEntityRiT1iEntity = riT1iRepository.findById(yD7Vb.riT1iId).get();
    node.setOwnedRiT1i(ownedEntityRiT1iEntity);
    IqYSo ownedDto1 = new IqYSo();
    ownedDto1.name = yD7Vb.iqYSoName;
    ownedDto1.value = yD7Vb.iqYSoValue;
    ownedDto1.id = yD7Vb.iqYSoId;
    int ownedDto1Code = iqYSoRestAPI.createIqYSo(ownedDto1).getStatusCode().value();
    if (!iqYSoRepository.findById(yD7Vb.iqYSoId).isPresent())
      return ResponseEntity.status(ownedDto1Code).build();
    IqYSoEntity ownedEntityIqYSoEntity = iqYSoRepository.findById(yD7Vb.iqYSoId).get();
    node.setOwnedIqYSo(ownedEntityIqYSoEntity);
    // refer to related entity
    if (!aS7ExRepository.findById(yD7Vb.aS7ExId).isPresent())
      return ResponseEntity.status(404).build();
    AS7ExEntity referVarToAS7ExEntity = aS7ExRepository.findById(yD7Vb.aS7ExId).get();
    node.setAS7Ex(referVarToAS7ExEntity);
    if (!sIth8Repository.findById(yD7Vb.sIth8Id).isPresent())
      return ResponseEntity.status(404).build();
    SIth8Entity referVarToSIth8Entity = sIth8Repository.findById(yD7Vb.sIth8Id).get();
    node.setSIth8(referVarToSIth8Entity);
    node.setName(yD7Vb.name);
    node.setValue(yD7Vb.value);
    // save the entity
    yD7VbRepository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/sIth8s/{sIth8Id}/aS7Exs/{aS7ExId}/yD7Vbs/{yD7VbsId}",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<YD7Vb> getYD7VbById(
      @PathVariable(name = "yD7VbsId") Integer yD7VbsId,
      @PathVariable(name = "aS7ExId") Integer aS7ExId,
      @PathVariable(name = "sIth8Id") Integer sIth8Id) {
    if (!yD7VbRepository.findById(yD7VbsId).isPresent()) return ResponseEntity.status(404).build();
    YD7Vb dto = yD7VbRepository.findById(yD7VbsId).get().getDto();
    return ResponseEntity.ok(dto);
  }

  @RequestMapping(
      value = "/sIth8s/{sIth8Id}/aS7Exs/{aS7ExId}/yD7Vbs",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<List<YD7Vb>> getAllWithConditionYD7Vb(
      @PathVariable(name = "aS7ExId") Integer aS7ExId,
      @PathVariable(name = "sIth8Id") Integer sIth8Id) {
    List<YD7Vb> allDtos = new ArrayList<>();
    for (YD7VbEntity e : yD7VbRepository.findAll()) {
      allDtos.add(e.getDto());
    }
    return ResponseEntity.ok(allDtos);
  }

  @RequestMapping(
      value = "/sIth8s/{sIth8Id}/aS7Exs/{aS7ExId}/yD7Vbs/{yD7VbsId}",
      method = RequestMethod.PATCH,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity updateYD7VbByValues(
      @PathVariable(name = "yD7VbsId") Integer yD7VbsId,
      @RequestParam(name = "yD7Vbsname", required = false) String yD7Vbsname,
      @RequestParam(name = "yD7Vbsvalue", required = false) Integer yD7Vbsvalue,
      @PathVariable(name = "aS7ExId") Integer aS7ExId,
      @PathVariable(name = "sIth8Id") Integer sIth8Id,
      @RequestParam(name = "riT1iName", required = false) String riT1iName,
      @RequestParam(name = "riT1iValue", required = false) Integer riT1iValue,
      @RequestParam(name = "iqYSoName", required = false) String iqYSoName,
      @RequestParam(name = "iqYSoValue", required = false) Integer iqYSoValue) {
    if (!yD7VbRepository.findById(yD7VbsId).isPresent()) return ResponseEntity.status(404).build();
    YD7VbEntity node = yD7VbRepository.findById(yD7VbsId).get();
    // update owned entity
    if (!riT1iRepository.findById(node.getOwnedRiT1i().getId()).isPresent())
      return ResponseEntity.status(404).build();
    RiT1iEntity ownedEntity0 = riT1iRepository.findById(node.getOwnedRiT1i().getId()).get();
    if (riT1iName != null || riT1iValue != null) {
      if (riT1iName != null) ownedEntity0.setName(riT1iName);
      if (riT1iValue != null) ownedEntity0.setValue(riT1iValue);
      riT1iRepository.save(ownedEntity0);
    }
    RiT1i ownedDto0 = ownedEntity0.getDto();
    if (!iqYSoRepository.findById(node.getOwnedIqYSo().getId()).isPresent())
      return ResponseEntity.status(404).build();
    IqYSoEntity ownedEntity1 = iqYSoRepository.findById(node.getOwnedIqYSo().getId()).get();
    if (iqYSoName != null || iqYSoValue != null) {
      if (iqYSoName != null) ownedEntity1.setName(iqYSoName);
      if (iqYSoValue != null) ownedEntity1.setValue(iqYSoValue);
      iqYSoRepository.save(ownedEntity1);
    }
    IqYSo ownedDto1 = ownedEntity1.getDto();
    // refer to related entity
    AS7ExEntity referVarToAS7ExEntity = null;
    if (aS7ExId != null) {
      if (!aS7ExRepository.findById(aS7ExId).isPresent()) return ResponseEntity.status(400).build();
      referVarToAS7ExEntity = aS7ExRepository.findById(aS7ExId).get();
      node.setAS7Ex(referVarToAS7ExEntity);
    } else {
      referVarToAS7ExEntity = node.getAS7Ex();
    }
    SIth8Entity referVarToSIth8Entity = null;
    if (sIth8Id != null) {
      if (!sIth8Repository.findById(sIth8Id).isPresent()) return ResponseEntity.status(400).build();
      referVarToSIth8Entity = sIth8Repository.findById(sIth8Id).get();
      node.setSIth8(referVarToSIth8Entity);
    } else {
      referVarToSIth8Entity = node.getSIth8();
    }
    if (yD7Vbsname != null) {
      node.setName(yD7Vbsname);
    }
    if (yD7Vbsvalue != null) {
      node.setValue(yD7Vbsvalue);
    }
    // save the entity
    yD7VbRepository.save(node);
    return ResponseEntity.status(200).build();
  }

  @RequestMapping(
      value = "/sIth8s/{sIth8Id}/aS7Exs/{aS7ExId}/yD7Vbs/{yD7VbsId}",
      method = RequestMethod.DELETE,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity deleteWithConditionYD7Vb(
      @PathVariable(name = "yD7VbsId") Integer yD7VbsId,
      @PathVariable(name = "aS7ExId") Integer aS7ExId,
      @PathVariable(name = "sIth8Id") Integer sIth8Id) {
    // an entity with id yD7VbsId should exist
    if (!yD7VbRepository.findById(yD7VbsId).isPresent()) return ResponseEntity.status(404).build();
    yD7VbRepository.deleteById(yD7VbsId);
    return ResponseEntity.status(200).build();
  }
}
