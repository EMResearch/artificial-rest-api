package org.autogenerated.rest.artificial.cs.n5densepdhide.service;

import org.autogenerated.rest.artificial.cs.n5densepdhide.entity.*;
import org.autogenerated.rest.artificial.cs.n5densepdhide.dto.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import javax.ws.rs.core.MediaType;
import java.util.*;
/** automatically created on 2020-01-14 */
@RestController
@RequestMapping(path = "/api")
public class WXTGlRestAPI {
  @Autowired private WXTGlRepository wXTGlRepository;

  @RequestMapping(
      value = "/wXTGls",
      method = RequestMethod.POST,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createWXTGl(@RequestBody WXTGl wXTGl) {
    // an entity with id wXTGl.id should not exist
    if (wXTGlRepository.findById(wXTGl.id).isPresent()) return ResponseEntity.status(400).build();
    WXTGlEntity node = new WXTGlEntity();
    node.setId(wXTGl.id);
    node.setName(wXTGl.name);
    node.setValue(wXTGl.value);
    // save the entity
    wXTGlRepository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/wXTGls/{wXTGlsId}",
      method = RequestMethod.PUT,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createOrUpdateWXTGl(
      @PathVariable(name = "wXTGlsId") Integer wXTGlsId, @RequestBody WXTGl wXTGl) {
    wXTGl.id = wXTGlsId;
    WXTGlEntity node = null;
    if (wXTGlRepository.findById(wXTGl.id).isPresent())
      node = wXTGlRepository.findById(wXTGl.id).get();
    else {
      node = new WXTGlEntity();
      node.setId(wXTGl.id);
    }
    node.setName(wXTGl.name);
    node.setValue(wXTGl.value);
    // save the entity
    wXTGlRepository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/wXTGls/{wXTGlsId}",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<WXTGl> getWXTGlById(@PathVariable(name = "wXTGlsId") Integer wXTGlsId) {
    if (!wXTGlRepository.findById(wXTGlsId).isPresent()) return ResponseEntity.status(404).build();
    WXTGl dto = wXTGlRepository.findById(wXTGlsId).get().getDto();
    return ResponseEntity.ok(dto);
  }

  @RequestMapping(
      value = "/wXTGls",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<List<WXTGl>> getAllWXTGl() {
    List<WXTGl> allDtos = new ArrayList<>();
    for (WXTGlEntity e : wXTGlRepository.findAll()) {
      allDtos.add(e.getDto());
    }
    return ResponseEntity.ok(allDtos);
  }

  @RequestMapping(
      value = "/wXTGls/{wXTGlsId}",
      method = RequestMethod.PATCH,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity updateWXTGlByValues(
      @PathVariable(name = "wXTGlsId") Integer wXTGlsId,
      @RequestParam(name = "wXTGlsname", required = false) String wXTGlsname,
      @RequestParam(name = "wXTGlsvalue", required = false) Integer wXTGlsvalue) {
    if (!wXTGlRepository.findById(wXTGlsId).isPresent()) return ResponseEntity.status(404).build();
    WXTGlEntity node = wXTGlRepository.findById(wXTGlsId).get();
    if (wXTGlsname != null) {
      node.setName(wXTGlsname);
    }
    if (wXTGlsvalue != null) {
      node.setValue(wXTGlsvalue);
    }
    // save the entity
    wXTGlRepository.save(node);
    return ResponseEntity.status(200).build();
  }

  @RequestMapping(
      value = "/wXTGls/{wXTGlsId}",
      method = RequestMethod.DELETE,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity deleteWXTGl(@PathVariable(name = "wXTGlsId") Integer wXTGlsId) {
    // an entity with id wXTGlsId should exist
    if (!wXTGlRepository.findById(wXTGlsId).isPresent()) return ResponseEntity.status(404).build();
    wXTGlRepository.deleteById(wXTGlsId);
    return ResponseEntity.status(200).build();
  }
}
