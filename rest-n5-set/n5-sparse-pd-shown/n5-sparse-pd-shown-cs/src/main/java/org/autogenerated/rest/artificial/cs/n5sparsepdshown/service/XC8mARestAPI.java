package org.autogenerated.rest.artificial.cs.n5sparsepdshown.service;

import org.autogenerated.rest.artificial.cs.n5sparsepdshown.entity.*;
import org.autogenerated.rest.artificial.cs.n5sparsepdshown.dto.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import javax.ws.rs.core.MediaType;
import java.util.*;
/** automatically created on 2020-01-14 */
@RestController
@RequestMapping(path = "/api")
public class XC8mARestAPI {
  @Autowired private XC8mARepository xC8mARepository;

  @RequestMapping(
      value = "/xC8mAs",
      method = RequestMethod.POST,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createXC8mA(@RequestBody XC8mA xC8mA) {
    // an entity with id xC8mA.id should not exist
    if (xC8mARepository.findById(xC8mA.id).isPresent()) return ResponseEntity.status(400).build();
    XC8mAEntity node = new XC8mAEntity();
    node.setId(xC8mA.id);
    node.setName(xC8mA.name);
    node.setValue(xC8mA.value);
    // save the entity
    xC8mARepository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/xC8mAs/{xC8mAsId}",
      method = RequestMethod.PUT,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createOrUpdateXC8mA(
      @PathVariable(name = "xC8mAsId") Integer xC8mAsId, @RequestBody XC8mA xC8mA) {
    xC8mA.id = xC8mAsId;
    XC8mAEntity node = null;
    if (xC8mARepository.findById(xC8mA.id).isPresent())
      node = xC8mARepository.findById(xC8mA.id).get();
    else {
      node = new XC8mAEntity();
      node.setId(xC8mA.id);
    }
    node.setName(xC8mA.name);
    node.setValue(xC8mA.value);
    // save the entity
    xC8mARepository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/xC8mAs/{xC8mAsId}",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<XC8mA> getXC8mAById(@PathVariable(name = "xC8mAsId") Integer xC8mAsId) {
    if (!xC8mARepository.findById(xC8mAsId).isPresent()) return ResponseEntity.status(404).build();
    XC8mA dto = xC8mARepository.findById(xC8mAsId).get().getDto();
    return ResponseEntity.ok(dto);
  }

  @RequestMapping(
      value = "/xC8mAs",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<List<XC8mA>> getAllXC8mA() {
    List<XC8mA> allDtos = new ArrayList<>();
    for (XC8mAEntity e : xC8mARepository.findAll()) {
      allDtos.add(e.getDto());
    }
    return ResponseEntity.ok(allDtos);
  }

  @RequestMapping(
      value = "/xC8mAs/{xC8mAsId}",
      method = RequestMethod.PATCH,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity updateXC8mAByValues(
      @PathVariable(name = "xC8mAsId") Integer xC8mAsId,
      @RequestParam(name = "xC8mAsname", required = false) String xC8mAsname,
      @RequestParam(name = "xC8mAsvalue", required = false) Integer xC8mAsvalue) {
    if (!xC8mARepository.findById(xC8mAsId).isPresent()) return ResponseEntity.status(404).build();
    XC8mAEntity node = xC8mARepository.findById(xC8mAsId).get();
    if (xC8mAsname != null) {
      node.setName(xC8mAsname);
    }
    if (xC8mAsvalue != null) {
      node.setValue(xC8mAsvalue);
    }
    // save the entity
    xC8mARepository.save(node);
    return ResponseEntity.status(200).build();
  }

  @RequestMapping(
      value = "/xC8mAs/{xC8mAsId}",
      method = RequestMethod.DELETE,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity deleteXC8mA(@PathVariable(name = "xC8mAsId") Integer xC8mAsId) {
    // an entity with id xC8mAsId should exist
    if (!xC8mARepository.findById(xC8mAsId).isPresent()) return ResponseEntity.status(404).build();
    xC8mARepository.deleteById(xC8mAsId);
    return ResponseEntity.status(200).build();
  }
}
