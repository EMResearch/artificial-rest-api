package org.autogenerated.rest.artificial.cs.n5mediumpdshown.service;

import org.autogenerated.rest.artificial.cs.n5mediumpdshown.entity.*;
import org.autogenerated.rest.artificial.cs.n5mediumpdshown.dto.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import javax.ws.rs.core.MediaType;
import java.util.*;
/** automatically created on 2020-01-14 */
@RestController
@RequestMapping(path = "/api")
public class HGss7RestAPI {
  @Autowired private HGss7Repository hGss7Repository;
  @Autowired private S5htzRepository s5htzRepository;

  @RequestMapping(
      value = "/i4AFGs/{i4AFGId}/s5htzs/{s5htzId}/hGss7s",
      method = RequestMethod.POST,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createHGss7(
      @RequestBody HGss7 hGss7,
      @PathVariable(name = "i4AFGId") Integer i4AFGId,
      @PathVariable(name = "s5htzId") Integer s5htzId) {
    // an entity with id hGss7.id should not exist
    if (hGss7Repository.findById(hGss7.id).isPresent()) return ResponseEntity.status(400).build();
    HGss7Entity node = new HGss7Entity();
    node.setId(hGss7.id);
    // refer to related entity
    if (!s5htzRepository.findById(hGss7.s5htzId).isPresent())
      return ResponseEntity.status(404).build();
    S5htzEntity referVarToS5htzEntity = s5htzRepository.findById(hGss7.s5htzId).get();
    node.setS5htz(referVarToS5htzEntity);
    node.setName(hGss7.name);
    node.setValue(hGss7.value);
    // additional codes for handling dependency
    if (!(node.getValue() == referVarToS5htzEntity.getValue()))
      return ResponseEntity.status(400).build();
    // save the entity
    hGss7Repository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/i4AFGs/{i4AFGId}/s5htzs/{s5htzId}/hGss7s/{hGss7sId}",
      method = RequestMethod.PUT,
      consumes = MediaType.APPLICATION_JSON)
  public ResponseEntity createOrUpdateHGss7(
      @PathVariable(name = "hGss7sId") Integer hGss7sId,
      @RequestBody HGss7 hGss7,
      @PathVariable(name = "i4AFGId") Integer i4AFGId,
      @PathVariable(name = "s5htzId") Integer s5htzId) {
    hGss7.id = hGss7sId;
    HGss7Entity node = null;
    if (hGss7Repository.findById(hGss7.id).isPresent())
      node = hGss7Repository.findById(hGss7.id).get();
    else {
      node = new HGss7Entity();
      node.setId(hGss7.id);
    }
    // refer to related entity
    if (!s5htzRepository.findById(hGss7.s5htzId).isPresent())
      return ResponseEntity.status(404).build();
    S5htzEntity referVarToS5htzEntity = s5htzRepository.findById(hGss7.s5htzId).get();
    node.setS5htz(referVarToS5htzEntity);
    node.setName(hGss7.name);
    node.setValue(hGss7.value);
    // additional codes for handling dependency
    if (!(node.getValue() == referVarToS5htzEntity.getValue()))
      return ResponseEntity.status(400).build();
    // save the entity
    hGss7Repository.save(node);
    return ResponseEntity.status(201).build();
  }

  @RequestMapping(
      value = "/i4AFGs/{i4AFGId}/s5htzs/{s5htzId}/hGss7s/{hGss7sId}",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<HGss7> getHGss7ById(
      @PathVariable(name = "hGss7sId") Integer hGss7sId,
      @PathVariable(name = "i4AFGId") Integer i4AFGId,
      @PathVariable(name = "s5htzId") Integer s5htzId) {
    if (!hGss7Repository.findById(hGss7sId).isPresent()) return ResponseEntity.status(404).build();
    HGss7 dto = hGss7Repository.findById(hGss7sId).get().getDto();
    return ResponseEntity.ok(dto);
  }

  @RequestMapping(
      value = "/i4AFGs/{i4AFGId}/s5htzs/{s5htzId}/hGss7s",
      method = RequestMethod.GET,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity<List<HGss7>> getAllWithConditionHGss7(
      @PathVariable(name = "i4AFGId") Integer i4AFGId,
      @PathVariable(name = "s5htzId") Integer s5htzId) {
    List<HGss7> allDtos = new ArrayList<>();
    for (HGss7Entity e : hGss7Repository.findAll()) {
      allDtos.add(e.getDto());
    }
    return ResponseEntity.ok(allDtos);
  }

  @RequestMapping(
      value = "/i4AFGs/{i4AFGId}/s5htzs/{s5htzId}/hGss7s/{hGss7sId}",
      method = RequestMethod.PATCH,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity updateHGss7ByValues(
      @PathVariable(name = "hGss7sId") Integer hGss7sId,
      @RequestParam(name = "hGss7sname", required = false) String hGss7sname,
      @RequestParam(name = "hGss7svalue", required = false) Integer hGss7svalue,
      @PathVariable(name = "s5htzId") Integer s5htzId,
      @PathVariable(name = "i4AFGId") Integer i4AFGId) {
    if (!hGss7Repository.findById(hGss7sId).isPresent()) return ResponseEntity.status(404).build();
    HGss7Entity node = hGss7Repository.findById(hGss7sId).get();
    // refer to related entity
    S5htzEntity referVarToS5htzEntity = null;
    if (s5htzId != null) {
      if (!s5htzRepository.findById(s5htzId).isPresent()) return ResponseEntity.status(400).build();
      referVarToS5htzEntity = s5htzRepository.findById(s5htzId).get();
      node.setS5htz(referVarToS5htzEntity);
    } else {
      referVarToS5htzEntity = node.getS5htz();
    }
    if (hGss7sname != null) {
      node.setName(hGss7sname);
    }
    if (hGss7svalue != null) {
      node.setValue(hGss7svalue);
    }
    // additional codes for handling dependency
    if (!(node.getValue() == referVarToS5htzEntity.getValue()))
      return ResponseEntity.status(400).build();
    // save the entity
    hGss7Repository.save(node);
    return ResponseEntity.status(200).build();
  }

  @RequestMapping(
      value = "/i4AFGs/{i4AFGId}/s5htzs/{s5htzId}/hGss7s/{hGss7sId}",
      method = RequestMethod.DELETE,
      produces = MediaType.APPLICATION_JSON)
  public ResponseEntity deleteWithConditionHGss7(
      @PathVariable(name = "hGss7sId") Integer hGss7sId,
      @PathVariable(name = "i4AFGId") Integer i4AFGId,
      @PathVariable(name = "s5htzId") Integer s5htzId) {
    // an entity with id hGss7sId should exist
    if (!hGss7Repository.findById(hGss7sId).isPresent()) return ResponseEntity.status(404).build();
    hGss7Repository.deleteById(hGss7sId);
    return ResponseEntity.status(200).build();
  }
}
